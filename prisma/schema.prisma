generator client {
  provider = "prisma-client-js"
  // output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email            String    @unique
  email_verified_at DateTime?
  password         String
  level            UserLevel
  aktif            Boolean
  remember_token   String?   @db.VarChar(100)
  created_at       DateTime  @default(now())
  updated_at       DateTime  @updatedAt @default(now())

  pelanggan        pelanggan[]
  karyawan         karyawan[]
}

model pelanggan {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  nama_lengkap  String
  no_hp         String    @db.VarChar(15)
  alamat        String
  foto          String?
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt @default(now())

  id_user       String    @db.Uuid
  user          users     @relation(fields: [id_user], references: [id])

  reservasi     reservasi[]
}

model karyawan {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  nama_karyawan String
  alamat        String
  no_hp         String    @db.VarChar(15)
  jabatan       Jabatan
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt @default(now())

  id_user       String    @db.Uuid
  user          users     @relation(fields: [id_user], references: [id])
}

model paket_wisata {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  nama_paket     String
  deskripsi      String
  fasilitas      String
  harga_per_pack Int
  foto1          String?
  foto2          String?
  foto3          String?
  foto4          String?
  foto5          String?
  created_at     DateTime  @default(now()) 
  updated_at     DateTime  @updatedAt @default(now())

  reservasi      reservasi[]
}

model reservasi {
  id                    String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  id_pelanggan          String    @db.Uuid
  id_paket              String    @db.Uuid
  tgl_reservasi_wisata  DateTime
  harga                 Int
  jumlah_peserta        Int
  diskon                Decimal   @db.Decimal(10, 0)
  nilai_diskon          Float
  total_bayar           BigInt
  file_bukti_tf         String?
  status_reservasi_wisata StatusReservasi
  created_at            DateTime  @default(now())
  updated_at            DateTime  @updatedAt @default(now())

  pelanggan             pelanggan    @relation(fields: [id_pelanggan], references: [id])
  paket_wisata          paket_wisata @relation(fields: [id_paket], references: [id])
}

// ENUMS

enum UserLevel {
  admin
  bendahara
  pelanggan
  pemilik
}

enum Jabatan {
  administrasi
  bendahara
  pemilik
}

enum StatusReservasi {
  pesan
  dibayar
  selesai
}